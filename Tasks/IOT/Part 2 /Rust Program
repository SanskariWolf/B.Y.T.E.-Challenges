const RED_PIN: u8 = 13;
const GREEN_PIN: u8 = 11;
const BLUE_PIN: u8 = 12;
const BUTTON_PIN: u8 = 7;

const OFF: bool = false;
const ON: bool = true;

fn setup() {
    pinMode(RED_PIN, OUTPUT);
    pinMode(GREEN_PIN, OUTPUT);
    pinMode(BLUE_PIN, OUTPUT);
    pinMode(BUTTON_PIN, INPUT_PULLUP);

    digitalWrite(RED_PIN, ON);
    digitalWrite(GREEN_PIN, OFF);
    digitalWrite(BLUE_PIN, OFF);
}

fn loop() {
    static mut button_state: bool = LOW;
    static mut last_button_state: bool = LOW;
    static mut led_state: u8 = 0;

    button_state = digitalRead(BUTTON_PIN);

    if button_state == HIGH && last_button_state == LOW {
        led_state = (led_state + 1) % 3;
        update_leds(led_state);
    }

    last_button_state = button_state;
}

fn update_leds(state: u8) {
    match state {
        0 => {
            digitalWrite(RED_PIN, ON);
            digitalWrite(GREEN_PIN, OFF);
            digitalWrite(BLUE_PIN, OFF);
        }
        1 => {
            digitalWrite(RED_PIN, OFF);
            digitalWrite(GREEN_PIN, ON);
            digitalWrite(BLUE_PIN, OFF);
        }
        2 => {
            digitalWrite(RED_PIN, OFF);
            digitalWrite(GREEN_PIN, OFF);
            digitalWrite(BLUE_PIN, ON);
        }
        _ => {} // Invalid state
    }
}
